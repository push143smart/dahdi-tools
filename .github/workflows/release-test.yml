# This is a basic workflow that is manually triggered

name: Dahdi Tools Release Creator

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    inputs:
      project_name:
        description: |
          Project Name for Creating Release:
          Examples:
            dahdi-linux, dahdi-tools etc.
        required: true
        type: string
        default: "dahdi-linux-complete"
      release_version:
        description: |
          Release Version:
          Examples:
            3.1.0, 3.1.1, 3.2.0, 3.2.1 etc.
        required: true
        type: string
      rel_run:
        description: |
          If this is a Release Run or Test/Dry Run?
        required: true
        type: boolean
        default: true
      beta_rel:
        description: |
          If This is a Beta Release version?
          Example: 1 , 2 ,3 etc.
        required: true
        type: string
      github_user_repo:
        description: |
          Which Github user repo need to be relea
        required: false
        type: string
        default: "asterisk"


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  Release-DAHDI-TOOLS:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
       
 #     - name: Install Pre-requisites
 #       run: sudo apt-get install -y *usb* gcc g++ automake autoconf libtool make libncurses5-dev flex bison patch libtool autoconf linux-headers-$(uname -r) sqlite3 libsqlite3-dev git

 #     - name: Add ssh keys
 #        run: eval `ssh-agent -s`
 #            ssh-add - <<< '${{ secrets.PRIVATE_SSH_KEY }}'
             
 #      - name: Cloning Repo
   #     run: git clone git@github.com:push143smart/dahdi-tools.git

    #  - name: Change directory
     #   run: ls; cd dahdi-tools; ls
     
      - name: Run Release if it is release run
        if: ${{ inputs.rel_run }}
        run: echo "workspace ${GITHUB_WORKSPACE} with token as ${{ secrets.GITHUB_TOKEN}} Hello release version is ${{ inputs.release_version }} and it is a release run 1 with beta release version as ${{ inputs.beta_rel }} for user ${{ inputs.github_user_repo }}";ls ${GITHUB_WORKSPACE}

      - name: Run Release if its is dry run
        if: ${{ !inputs.rel_run }}
        run: echo "workspace ${GITHUB_WORKSPACE} with token as ${{ secrets.GITHUB_TOKEN}} and ${{ ${{secrets.GH_AUTH_KEY }} Hello release version is ${{ inputs.release_version }} and it is a release run 0 with beta release version as ${{ inputs.beta_rel }} for user ${{ inputs.github_user_repo }}"
        
      - name: Run Script
        #run: bash ./ci/create-test-release.sh ${{ inputs.release_version }} 0 ${{ inputs.beta_rel }} ${{ inputs.github_user_repo }} ${{ secrets.GITHUB_TOKEN}}
        run: bash ./ci/create-test-release.sh ${{ inputs.project_name }} ${{ inputs.release_version }} 0 ${{ inputs.beta_rel }} ${{ inputs.github_user_repo }} ${{ secrets.GH_AUTH_KEY }}

        
